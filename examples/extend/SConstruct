###
# Copyright (c) 2002, Tamer Fahmy <tamer@tammura.at>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#   * Neither the name of the copyright holder nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

import os
import distutils.sysconfig

def DumpEnv( env, key = None, header = None, footer = None ):
    """
    Using the standard Python pretty printer, dump the contents of the
    scons build environment to stdout.

    If the key passed in is anything other than 'env', then that will
    be used as an index into the build environment dictionary and
    whatever is found there will be fed into the pretty printer. Note
    that this key is case sensitive.

    The header and footer are simple mechanisms to allow printing a
    prefix and suffix to the contents that are dumped out. They are
    handy when using DumpEnv to dump multiple portions of the
    environment.
    """
    import pprint
    pp = pprint.PrettyPrinter( indent = 2 )
    if key:
        dict = env.Dictionary( key )
    else:
        dict = env.Dictionary()
    if header:
        print header
    pp.pprint( dict )
    if footer:
        print footer

SetOption('implicit_cache', 1)

opts = Options('custom.py')
opts.AddOptions(BoolOption('warnings', 'compilation with -Wall', 0),
                BoolOption('debug', 'debug output and symbols', 0))

env = Environment(ENV = os.environ,
                  options = opts,
                  tools=['default'])

Help(opts.GenerateHelpText(env))

if env['debug']:
    env.Append(CCFLAGS = (str(Platform()) == "win32") and ['/Zi'] or ['-g'])
else:
    env.Append(CCFLAGS = (str(Platform()) == "win32") and ['/O2'] or ['-O2'])

if str(Platform()) != "win32" and env['warnings']:
    env.Append(CCFLAGS = '-Wall')

env.ParseConfig('coin-config --cppflags --libs --ldflags')

env.Append(CPPPATH=['.', distutils.sysconfig.get_python_inc()])
env.Append(LIBPATH = distutils.sysconfig.get_python_lib())
env.Append(LIBS = 'pivy_runtime')
env.Append(LINKFLAGS = distutils.sysconfig.get_config_vars()['BLDLIBRARY'].split())
if str(Platform()) == 'posix':
    env.Append(LINKFLAGS = '-Wl,-R' + distutils.sysconfig.get_python_lib())

PIVY_ROOT = '../..'
SWIG_SUPPRESS_WARNINGS = "-w302,306,307,312,389,361,362,503,509,510"
env.Append(SWIGFLAGS = "-v -noruntime -c++ -python -includeall -D__PIVY__ " +
           "-I. -I%s -I%s/fake_headers -I/usr/local/include %s" %
           (PIVY_ROOT, PIVY_ROOT, SWIG_SUPPRESS_WARNINGS))

lib = env.SharedLibrary('_shapescale', Split('shapescale.i ShapeScale.cpp'),
                        SHLIBPREFIX='', SWIGCXXFILESUFFIX="_wrap.cpp")

env.Clean(lib, Split('shapescale.py shapescale.pyc'))
